

/*
 * 
 * 
 *   //switch (tipo)
        //{
        //    case IndicatorType.Limit:
        //        break;
        //    case IndicatorType.Obstacle:
        //        break;
        //    default:
        //        throw new ArgumentOutOfRangeException("tipo", tipo, null);
        //}
 * 
 * 
 * 
 * 
 * 
 * 
     //public void SavePosition() // Alterar
    //{
    //    _target = Directory + "\\" + CurrentFolderDestino + "\\";
    //    //Debug.Log("Pasta : " + _target);
    //    CheckFileSize();
    //    if (!_activo) NovoRegisto();


    //    string registo = "«Centro[" + _localOptitrackManager.GetPositionVector().x + "," + _localOptitrackManager.GetPositionVector().z + "]";
    //    WriteToDoc(registo);
    //    HasCenter = true;
    //}

    //public void SavePosition(IndicatorType tipo) 
    //{
    //    _target = Directory + "\\" + CurrentFolderDestino + "\\";
    //    //Debug.Log("Pasta : " + _target);
    //    CheckFileSize();
    //    if (!_activo) NovoRegisto();

    //    switch (tipo)
    //    {
    //        case IndicatorType.Limit:
    //            _numLimites++;
    //            break;
    //        default:
    //            _numObj++;
    //            break;
    //    }

    //   string registo = "«" + tipo + "[" + _localOptitrackManager.GetPositionVector().x + "," + _localOptitrackManager.GetPositionVector().z + "]";
    //    //switch (tipo)
    //    //{
    //    //    case IndicatorType.Limit:
    //    //        break;
    //    //    case IndicatorType.Obstacle:
    //    //        break;
    //    //    default:
    //    //        throw new ArgumentOutOfRangeException("tipo", tipo, null);
    //    //}

    //    WriteToDoc(registo);
    //}

    //public void SavePosition(IndicatorType tipo, LimitPositionMode mode) 
    //{
    //    _target = Directory + "\\" + CurrentFolderDestino + "\\";
    //    //Debug.Log("Pasta : " + _target);
    //    CheckFileSize();
    //    if (!_activo) NovoRegisto();

    //    switch (tipo)
    //    {
    //        case IndicatorType.Limit:
    //            _numLimites++;
    //            break;
    //        default:
    //            _numObj++;
    //            break;
    //    }

    //    var registo = "«" + tipo + "[" + _localOptitrackManager.GetPositionVector().x + "," + _localOptitrackManager.GetPositionVector().z + "]" + "|" + mode;

    //    WriteToDoc(registo);
    //}

    //public void SavePosition(IndicatorType tipo, RepresentationMode mode) 
    //{
    //    _target = Directory + "\\" + CurrentFolderDestino + "\\";
    //    //Debug.Log("Pasta : " + _target);
    //    CheckFileSize();
    //    if (!_activo) NovoRegisto();

    //    switch (tipo)
    //    {
    //        case IndicatorType.Limit:
    //            _numLimites++;
    //            break;
    //        default:
    //            _numObj++;
    //            break;
    //    }
    //    var registo = "«" + tipo + "[" + _localOptitrackManager.GetPositionVector().x + "," + _localOptitrackManager.GetPositionVector().z + "]" + "|" + mode;
    //    WriteToDoc(registo);
    //}
     
     
     
     
     
     
     ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        Doc = new StreamWriter(_target + _currentDocName, true);
       Doc.WriteLine(registo);
       Doc.Close(); 
     
     
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//if (tipo == IndicatorType.Limit)
//{
//    registo +=;
//}
//else if(tipo == IndicatorType.Obstacle)
//{
//    registo += _localOptitrackManager.PositionVector.x + "," + _localOptitrackManager.PositionVector.z;
//}

//registo += "]";
//+ _localOptitrackManager.PositionVector;
//= _versaoActiva == VersaoDisponivel.Versao1 ?
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 *
 *   SetInfoCompl();
 * 
 * 
   private void SetInfoCompl()
{
#if UNITY_EDITOR

    if (InfoCompl == "NADA")
    {
        InfoCompl = "EDITOR";
    }
    else
    {
        InfoCompl += ", EDITOR";
    }
#endif
#if UNITY_ANDROID //&& !UNITY_EDITOR

    if (InfoCompl == "NADA")
    {
        InfoCompl = "Android (Gear Vr)";
    }
    else
    {
        InfoCompl += ", Android (Gear Vr)";
    }
#endif
#if (UNITY_STANDALONE_WIN) // && !UNITY_EDITOR

    if (InfoCompl == "NADA")
        {
            InfoCompl = "Windows)";
        }
        else
        {
            InfoCompl += ", Windows";
        }
#endif

}












 */
